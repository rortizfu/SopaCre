function init() {
    txtPal = document.getElementById("txtPalabra"), 
    lstPal = document.getElementById("lstPalabras"), 
    txtPal.addEventListener("keypress", enter)
}

function enter(t) {
    13 == t.keyCode && addWord()
}

function addWord() {

    var existe = false;

    for (var i = 0; i < lstWord.length; i++) {
        if (lstWord[i] === txtPal.value.toUpperCase()) {
            existe = true;
        }
    }

    if (existe) {
        alert("La palabra ya fue ingresada, intente nuevamente.");
        txtPal.value = "";
    } else {
        txtPal.value.length > 0 ?
            (lstWord.push(txtPal.value.replace(" ", "").toUpperCase()),
                cargaLista(txtPal.value.replace(" ", "").toUpperCase()),
                txtPal.value = "") : alert("Ingrese una palabra.")
    }

    
}

function cargaLista(t) {
    var e = document.createElement("option");
    e.innerHTML = t, lstPal.appendChild(e)
}

function getPalabras() {
    return lstWord
}

function isNumberKey(t) {
    var e = t.which ? t.which : event.keyCode;
    return 46 != e && e > 31 && (48 > e || e > 57) ? !1 : !0
}

function showText(t) {
    document.getElementById("txtOutput").innerHTML = sopator.toString()
}
var sopator = function () {
    function t() {

        b = document.getElementById("nSize").value,
            //g = document.getElementById("lienzo"),
            M = b * S + 20, m = b * S + 20,
            //g.setAttribute("width", M),
            //g.setAttribute("height", m + 110),
            //v = g.getContext("2d"),
            y = getPalabras().slice(0), k = [],
            y.length > 0 ? (e(), a(), o(), 
			l(), 
			i()) : alert("Debe ingresar por lo menos una palabra")
    }

    function e() {
        for (var t = 0; m > t; t++) {
            I[t] = [];
            for (var e = 0; M > e; e++) I[t][e] = "*"
        }
    }

    function a() {
        for (var t = 0; t < y.length; t++) {
            var e = parseInt(Math.floor(Math.random() * b)),
                a = parseInt(Math.floor(Math.random() * b)),
                o = parseInt(Math.floor(8 * Math.random()));
            n(y[t], e, a, P[o]) ? (k.push([e, a, P[o]]), r(y[t], e, a, P[o])) : t--
        }
    }

    function n(t, e, a, n) {
        var r = t.length,
            o = !1;
        if (e + r * n[0] > 0 && e + r * n[0] < b && a + r * n[1] > 0 && a + r * n[1] < b)
            for (var l = 0; r > l; l++) {
                if ("*" != I[e + l * n[0]][a + l * n[1]] && I[e + l * n[0]][a + l * n[1]] != t.charAt(l)) {
                    o = !1;
                    break
                }
                o = !0
            } else o = !1;
        return o
    }

    function r(t, e, a, n) {
        for (var r = 0; r < t.length; r++) I[e + r * n[0]][a + r * n[1]] = t.charAt(r)
    }

    function o() {
        //v.beginPath(), v.fillStyle = "#FFF", v.fillRect(0, 0, M, m + 110), v.closePath(), v.fill(), v.beginPath(), v.strokeStyle = "#000", v.strokeRect(0, 0, M, m + 110), v.closePath(), v.fill()
    }

    var letras = [];
    var obj = "";
    var lstCoordenadas = [];
    var cantPalabras = 0;
    var wordMoreLength = 0;

    function l() {
        var filas = "";
        for (var tr = 0; tr < 15; tr++) {
            filas = filas + "<tr>"
            for (var td = 0; td < 15; td++) {
                filas = filas + "<td id=" + tr + "x" + td + ">" + tr + "-" + td + "</td>"
            }
            filas = filas + "</tr>"
        }

        filas = "<table id='sopaLetras' style='margin-left: 10%;'>" + filas + "</table>";

        for (var t = T.length, e = 0; b > e; e++) {
            x[e] = [];
            for (var a = 0; b > a; a++) {
                var n;
                n = "*" == I[e][a] ? T.charAt(parseInt(Math.floor(Math.random() * t))) : I[e][a];
                    x[e][a] = n;
                    indice = (e + "-" + a);
                filas = filas.replace(indice, n);
            }
        }

        wordMoreLength = lstWord[0].length;

        for(var i = 0; i < lstWord.length; i++){
            if (lstWord[i].length > wordMoreLength){
                wordMoreLength = lstWord[i].length;
            }
        }

        $("#divTable").append(filas);
        $("#sopaLetras tr td").click(function () {
            obj = new Object();
            obj.coordenada = "";
            obj.letter = "";


            if ($(this).hasClass("fondoWordComplete") === false) {

                if ($(this).hasClass("fondoLetra")) {
                    $(this).removeClass("fondoLetra");
                    for (var i = 0; i < lstCoordenadas.length; i++) {
                        if (lstCoordenadas[i] === $(this)[0].id) {
                            lstCoordenadas.splice(i, 1);
                            letras.splice(i, 1);
                        }
                    }
                }
                else {

                    $(this).addClass("fondoLetra");

                    obj.coordenada = $(this)[0].id;
                    obj.letter = $(this)[0].innerText.trim();

                    if (letras.length === 0) {
                        letras.push(obj);
                        lstCoordenadas.push(obj.coordenada);
                    } else {
                        var pop = letras[(letras.length - 1)];

                        if (!validarLetra(pop, $(this)[0].id)) {
                            alert("Letra no valida, intenta nuevamente");
                            $(this).removeClass("fondoLetra");
                            return;
                        }
                    }

                    if(lstCoordenadas.length > wordMoreLength){
                        $(this).removeClass("fondoLetra");
                        cleanWord();
                    }   
                }

                comprobarPalabra(letras);
            }
            
        });

    }

    function validarLetra(pop,coor) {

        var x, y;
        var arrCoordenada = [];
        var correcta = 0;
        var coorDiagonales = [];

        x = parseInt(coor.split("x")[0]);
        y = parseInt(coor.split("x")[1]);

        var ultima;
        var penultima;

        
        //if (letras.length > 1) {

        ultima = lstCoordenadas[lstCoordenadas.length - 1];
        penultima = lstCoordenadas[lstCoordenadas.length - 2];

        xUlt = parseInt(ultima.split("x")[0]);
        yUlt = parseInt(ultima.split("x")[1]);

        if (penultima != undefined) {
            xPen = parseInt(penultima.split("x")[0]);
            yPen = parseInt(penultima.split("x")[1]);
        }
        else {
            penultima = coor;
            xPen = parseInt(penultima.split("x")[0]);
            yPen = parseInt(penultima.split("x")[1]);
        }
        
        //Validacion horizontal y vertical
        if (
            ((xUlt === x) && (yUlt > y)) ||
            ((xUlt === x) && ((yUlt < y))) ||
            ((yUlt === y) && (xUlt > x)) ||
            ((yUlt === y) && (xUlt < x)) //||

            //((letras.length === 2 ? false : (yUlt === y) && (xUlt === x)))

        ) {
            x = parseInt(pop.coordenada.split("x")[0]);
            y = parseInt(pop.coordenada.split("x")[1]);

            arrCoordenada.push(x + "x" + (y == 0 ? y : y - 1));
            arrCoordenada.push(x + "x" + y);
            arrCoordenada.push(x + "x" + (y + 1));
            arrCoordenada.push((x + 1) + "x" + y);
            arrCoordenada.push((x === 0 ? x : (x - 1)) + "x" + y);

            //arrCoordenada.push(x + 1 + "," + (y == 0 ? y : y - 1));
            //arrCoordenada.push(x + 1 + "," + y);
            //arrCoordenada.push(x + 1 + "," + (y + 1));

            //arrCoordenada.push((x == 0 ? x : x - 1) + "," + (y == 0 ? y : y - 1));
            //arrCoordenada.push((x == 0 ? x : x - 1) + "," + y);
            //arrCoordenada.push((x == 0 ? x : x - 1) + "," + (y + 1));

            for (var i = 0; i < arrCoordenada.length; i++) {
                if (arrCoordenada[i] === coor) {

                    if ((xUlt - xPen) === 1 && (yUlt - yPen) === 1) {
                        return;
                    }

                    correcta++;
                    letras.push(obj);
                    lstCoordenadas.push(obj.coordenada);
                    break;
                }
            }
        }
        else {
            ultima = lstCoordenadas[lstCoordenadas.length - 1];

            if (letras.length > 1) {
                penultima = lstCoordenadas[lstCoordenadas.length - 2];
            }
       
            xUlt = parseInt(ultima.split("x")[0]);
            yUlt = parseInt(ultima.split("x")[1]);

            if (penultima != undefined) {
                xPen = parseInt(penultima.split("x")[0]);
                yPen = parseInt(penultima.split("x")[1]);

            }
            else {
                xPen = parseInt(coor.split("x")[0]);
                yPen = parseInt(coor.split("x")[1]);
            }

            coorDiagonales.push((xUlt - 1) + "x" + (yUlt - 1));
            coorDiagonales.push((xUlt - 1) + "x" + (yUlt + 1));
            coorDiagonales.push((xUlt + 1) + "x" + (yUlt - 1));
            coorDiagonales.push((xUlt + 1) + "x" + (yUlt + 1));

            for (var i = 0; i < coorDiagonales.length; i++) {
                if (coorDiagonales[i] === coor) {
                    correcta++;
                    letras.push(obj);
                    lstCoordenadas.push(obj.coordenada);
                }
            }
        }

      
        if (correcta === 0) {
            return false;
        } else {
            return true;
        }
        
    }

    function cleanWord(){
        for (var i = 0; i < lstCoordenadas.length; i++) {
            $("#" + lstCoordenadas[i]).removeClass("fondoWordComplete");
            $("#" + lstCoordenadas[i]).removeClass("fondoLetra");
        }

        lstCoordenadas = [];
        letras = [];

        alert("Haz superado la selección máxima de letras permitidas");

    };

    function comprobarPalabra(palabra) {
        var word = "";//palabras.join('');
        if (palabra.length > 0) {
            for (var i = 0; i < palabra.length; i++) {
                word = word + palabra[i].letter;
            }
        }

        for (var i = 0; i < lstWord.length; i++) {
            if (lstWord[i] === word) {
                //alert("ok");
                for (var i = 0; i < lstCoordenadas.length; i++) {

                    $("#" + lstCoordenadas[i]).addClass("fondoWordComplete");
                    $("#" + lstCoordenadas[i]).click(function () { });
                }

                cantPalabras++;
                letras = [];
                lstCoordenadas = [];
            }
        }
        //Reverso de palabra
        var reverse = [];
        for (var i = letras.length - 1; i >= 0; i--) {
            reverse.push(letras[i].letter);
        }
        //Reverso de palabra
        var word = "";
        for (var i = 0; i < reverse.length; i++) {
            word = word + reverse[i];
        }

        for (var i = 0; i < lstWord.length; i++) {
            if (lstWord[i] === word) {
                //alert("ok");
                for (var i = 0; i < lstCoordenadas.length; i++) {
                    $("#" + lstCoordenadas[i]).addClass("fondoWordComplete");
                    $("#" + lstCoordenadas[i]).click(function () { });
                }

                cantPalabras++;
                letras = [];
                lstCoordenadas = [];
            }
        }
       

        if (lstWord.length === cantPalabras) {
            alert("Finalizar");
        }


        
    }

    function i() {
        //v.beginPath(), v.fillRect(10, m - 5, M - 20, 10), v.closePath();
        for (var t = 0, e = 0, a = 1; a <= y.length; a++)
            //v.beginPath(),
                //v.font = "10pt Tahoma",
                //v.fillText(y[a - 1], 10 + 150 * t, m + 20 * e + S),
                //v.closePath(),
                //v.fill(),
                e++ ,
                a % 5 === 0 && (t++ , e = 0)
    }

    function s() {
        for (var t = 0; t < k.length; t++) {
            var e = c(k[t][2]);
            f(v, 11 + k[t][0] * S + p[e][0] * S, 15 + k[t][1] * S + p[e][1] * S, y[t].length * S * k[t][2][0], y[t].length * S * k[t][2][1], 18, k[t][2][0], k[t][2][1])
        }
    }

    function h() {
        //o(), I = x.slice(), l(), i()

        $("#sopaLetras").remove();
    }

    function c(t) {
        for (var e = 0, a = 0; a < P.length; a++)
            if (P[a][0] === t[0] && P[a][1] === t[1]) {
                e = a;
                break
            } return e
    }

    function f(t, e, a, n, r, o, l, i) {
        var s;
        Math.abs(l) + Math.abs(i) == 2 ? (s = Math.PI / 4, n *= .92, r *= .92) : 1 == Math.abs(l) ? s = Math.PI / 2 : 1 == Math.abs(i) && (s = 0), t.beginPath(), t.strokeStyle = "rgba(255, 0, 0, 0.5)", t.fillStyle = "rgba(255, 255, 0, 0.25)", t.moveTo(e, a), t.lineTo(e + n, a + r), t.lineTo(e + n - (0 === l ? 1 : l) * o * Math.cos(s), a + r + (0 === i ? 1 : i) * o * Math.sin(s)), t.lineTo(e - (0 === l ? 1 : l) * o * Math.cos(s), a + (0 === i ? 1 : i) * o * Math.sin(s)), t.closePath(), t.fill(), t.stroke()
    }

    function u() {
        var t = document.getElementById("lienzo");
        window.open(t.toDataURL(), "Pupiletras", "left=0,top=0,width=" + M + ",height=" + m + ",toolbar=0,resizable=0")
    }

    function d() {
        for (var t = "", e = 0; b > e; e++) {
            for (var a = 0; b > a; a++) t += x[a][e] + " ";
            t += "\n"
        }
        t += "\nPalabras:\n";
        for (var n = 0; n < y.length; n++) t += y[n] + "\n";
        return t += "\n\nSi haz generado tu sopa de letras con este aplicativo, no olvides recomendarlo a tus amigos y mencionarnos. Gracias"
    }
    var g, v, P = [
        [1, 0],
        [1, -1],
        [0, -1],
        [-1, -1],
        [-1, 0],
        [-1, 1],
        [0, 1],
        [1, 1]
    ],
        p = [
            [0, 0],
            [.3, 1],
            [.75, 1],
            [.35, .9],
            [1, 0],
            [.4, -.2],
            [.75, 0],
            [.35, -.2]
        ],
        b = 25,
        m = 520,
        M = 520,
        y = [],
        I = [],
        x = [],
        T = "ABCDEFGHIJKLMNÑOPQRSTUVWXYZ",
        S = 24,
        k = [];
    return {
        generate: t,
        solve2: s,
        save: u,
        clean: h,
        toString: d,
        palabras: y
    }
}(),
    lstWord = [],
    txtPal, lstPal;


